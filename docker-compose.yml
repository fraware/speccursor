version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: speccursor-postgres
    environment:
      POSTGRES_DB: speccursor
      POSTGRES_USER: speccursor
      POSTGRES_PASSWORD: speccursor_dev
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U speccursor']
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Store
  redis:
    image: redis:7-alpine
    container_name: speccursor-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Observability Stack
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: speccursor-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:10.2.0
    container_name: speccursor-grafana
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/docker/grafana/dashboards:/var/lib/grafana/dashboards

  loki:
    image: grafana/loki:2.9.0
    container_name: speccursor-loki
    ports:
      - '3100:3100'
    volumes:
      - ./infrastructure/docker/loki/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: speccursor-jaeger
    ports:
      - '16686:16686'
      - '14268:14268'
    environment:
      COLLECTOR_OTLP_ENABLED: true

  # Development Tools
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: speccursor-mailhog
    ports:
      - '1025:1025'
      - '8025:8025'

  # Lean Development Environment
  lean-dev:
    image: leanprover/lean4:4.20.0
    container_name: speccursor-lean-dev
    volumes:
      - ./workers/lean-engine:/workspace
    working_dir: /workspace
    command: tail -f /dev/null

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: speccursor-network
